// <auto-generated />
using System;
using InfoShop.Core.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoShop.Core.DAL.Migrations
{
    [DbContext(typeof(InfoShopCoreContext))]
    [Migration("20230512113225_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractWith")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IspId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MarketId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IspId");

                    b.HasIndex("MarketId");

                    b.ToTable("Connections");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContractNumber = "НП-1/13-03",
                            ContractWith = "Модрина.К",
                            Interface = "FastEthernet0/1",
                            IspId = 2L,
                            MarketId = 1L,
                            Type = 2
                        },
                        new
                        {
                            Id = 2L,
                            ContractNumber = "190104",
                            ContractWith = "Граб.К",
                            Interface = "FastEthernet0/1",
                            IspId = 3L,
                            MarketId = 2L,
                            Type = 1
                        },
                        new
                        {
                            Id = 3L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "GigabitEthernet0/1",
                            IspId = 4L,
                            MarketId = 3L,
                            Type = 3
                        },
                        new
                        {
                            Id = 4L,
                            ContractNumber = "258340",
                            ContractWith = "Каштан.К",
                            Interface = "FastEthernet0/1",
                            IspId = 5L,
                            MarketId = 4L,
                            Type = 1
                        },
                        new
                        {
                            Id = 5L,
                            ContractNumber = "",
                            ContractWith = "Вільха.К",
                            Interface = "FastEthernet0/1",
                            IspId = 6L,
                            MarketId = 5L,
                            Type = 3
                        },
                        new
                        {
                            Id = 6L,
                            ContractNumber = "",
                            ContractWith = "Модрина.К",
                            Interface = "FastEthernet0/1",
                            IspId = 7L,
                            MarketId = 6L,
                            Type = 2
                        },
                        new
                        {
                            Id = 7L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "FastEthernet0/0.99",
                            IspId = 1L,
                            MarketId = 1L,
                            Type = 2
                        },
                        new
                        {
                            Id = 8L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "FastEthernet0/0.99",
                            IspId = 1L,
                            MarketId = 2L,
                            Type = 2
                        },
                        new
                        {
                            Id = 9L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "FastEthernet0/0.99",
                            IspId = 1L,
                            MarketId = 4L,
                            Type = 2
                        },
                        new
                        {
                            Id = 10L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "FastEthernet0/0.99",
                            IspId = 1L,
                            MarketId = 5L,
                            Type = 2
                        },
                        new
                        {
                            Id = 11L,
                            ContractNumber = "",
                            ContractWith = "НьюВітаГруп",
                            Interface = "FastEthernet0/0.99",
                            IspId = 1L,
                            MarketId = 6L,
                            Type = 2
                        });
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.ConnectionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.ToTable("ConnectionDetail");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ConnectionId = 1L,
                            Key = "IP-address",
                            Value = "95.47.248.199"
                        },
                        new
                        {
                            Id = 2L,
                            ConnectionId = 1L,
                            Key = "Mask",
                            Value = "255.255.255.128"
                        },
                        new
                        {
                            Id = 3L,
                            ConnectionId = 1L,
                            Key = "Gateway",
                            Value = "255.255.255.129"
                        },
                        new
                        {
                            Id = 4L,
                            ConnectionId = 2L,
                            Key = "IP-address",
                            Value = "46.173.121.91"
                        },
                        new
                        {
                            Id = 5L,
                            ConnectionId = 2L,
                            Key = "MAC-binding",
                            Value = "false"
                        },
                        new
                        {
                            Id = 6L,
                            ConnectionId = 3L,
                            Key = "IP-address",
                            Value = "93.170.188.251"
                        },
                        new
                        {
                            Id = 7L,
                            ConnectionId = 3L,
                            Key = "PPPoE-Login",
                            Value = "30246899"
                        },
                        new
                        {
                            Id = 8L,
                            ConnectionId = 3L,
                            Key = "PPPoE-Password",
                            Value = "82169755"
                        },
                        new
                        {
                            Id = 9L,
                            ConnectionId = 4L,
                            Key = "IP-address",
                            Value = "80.77.33.161"
                        },
                        new
                        {
                            Id = 10L,
                            ConnectionId = 4L,
                            Key = "MAC-binding",
                            Value = "true"
                        },
                        new
                        {
                            Id = 11L,
                            ConnectionId = 5L,
                            Key = "IP-address",
                            Value = "176.118.54.50"
                        },
                        new
                        {
                            Id = 12L,
                            ConnectionId = 5L,
                            Key = "PPPoE-Login",
                            Value = "000020390"
                        },
                        new
                        {
                            Id = 13L,
                            ConnectionId = 5L,
                            Key = "PPPoE-Password",
                            Value = "02092020"
                        },
                        new
                        {
                            Id = 14L,
                            ConnectionId = 6L,
                            Key = "IP-address",
                            Value = "195.46.32.87"
                        },
                        new
                        {
                            Id = 15L,
                            ConnectionId = 6L,
                            Key = "Mask",
                            Value = "255.255.255.0"
                        },
                        new
                        {
                            Id = 16L,
                            ConnectionId = 6L,
                            Key = "Gateway",
                            Value = "195.46.32.2"
                        });
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Isp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Isps");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "",
                            Name = "Укртелеком"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "",
                            Name = "Crazy Network"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "",
                            Name = "Колумбус (БіттерНет)"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "",
                            Name = "ПРОСТІР"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "",
                            Name = "ДатаГруп"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "",
                            Name = "РадіоНетворк"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "",
                            Name = "Мальта"
                        });
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.IspContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CommunicationType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IspId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IspId");

                    b.ToTable("IspContacts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CommunicationType = 2,
                            Description = "Адреса для створення заявок",
                            IspId = 1L,
                            Value = "zmina@ukrtelecom.net"
                        },
                        new
                        {
                            Id = 2L,
                            CommunicationType = 1,
                            Description = "Технічна підтримка",
                            IspId = 2L,
                            Value = "0986781426"
                        },
                        new
                        {
                            Id = 3L,
                            CommunicationType = 1,
                            Description = "Гаряча лінія",
                            IspId = 3L,
                            Value = "0800317407"
                        },
                        new
                        {
                            Id = 4L,
                            CommunicationType = 1,
                            Description = "Офіс",
                            IspId = 4L,
                            Value = "0979244224"
                        },
                        new
                        {
                            Id = 5L,
                            CommunicationType = 1,
                            Description = "Офіс",
                            IspId = 5L,
                            Value = "0800 211 000"
                        },
                        new
                        {
                            Id = 6L,
                            CommunicationType = 1,
                            Description = "Технічна підтримка",
                            IspId = 7L,
                            Value = "0674800808"
                        },
                        new
                        {
                            Id = 7L,
                            CommunicationType = 1,
                            Description = "Оксана",
                            IspId = 7L,
                            Value = "0673701747"
                        });
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Market", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntrenalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "вул. Князів Коріатовичів, 13",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Кам'янець-Подільський 7",
                            Phone = "+380675089930"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "вул. Князя Василька, 2",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Володимир-Волинський 3",
                            Phone = "+380675069673"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "вул. Стефаника, 1",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Снятин 5",
                            Phone = "+380671979140"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "вул. Героїв Небесної Сотні, 33/1",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Шепетівка 1",
                            Phone = "+380675084559"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "вул. Галицького Лева, 3а",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Старий Самбір 1",
                            Phone = "+380673429840"
                        },
                        new
                        {
                            Id = 6L,
                            Address = "вул. Оржевської, 2",
                            IntrenalNumber = "",
                            IsActive = true,
                            Name = "Новоград-Волинський 2",
                            Phone = "+380673405315"
                        });
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Isp", "Isp")
                        .WithMany("Connections")
                        .HasForeignKey("IspId");

                    b.HasOne("InfoShop.Core.DAL.Entities.Market", "Market")
                        .WithMany("Connections")
                        .HasForeignKey("MarketId");

                    b.Navigation("Isp");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.ConnectionDetail", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Connection", "Connection")
                        .WithMany("ConnectionDetails")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connection");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.IspContact", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Isp", "Isp")
                        .WithMany("IspContacts")
                        .HasForeignKey("IspId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Isp");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.Navigation("ConnectionDetails");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Isp", b =>
                {
                    b.Navigation("Connections");

                    b.Navigation("IspContacts");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Market", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
