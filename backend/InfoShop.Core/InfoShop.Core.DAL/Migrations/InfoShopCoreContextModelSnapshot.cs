// <auto-generated />
using System;
using InfoShop.Core.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoShop.Core.DAL.Migrations
{
    [DbContext(typeof(InfoShopCoreContext))]
    partial class InfoShopCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConnectionPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IspId")
                        .HasColumnType("bigint");

                    b.Property<long>("MarketId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IspId");

                    b.HasIndex("MarketId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.ConnectionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.ToTable("ConnectionDetail");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Isp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractWith")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Isps");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.IspContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CommunicationType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IspId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IspId");

                    b.ToTable("IspContacts");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Market", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntrenalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Isp", "Isp")
                        .WithMany()
                        .HasForeignKey("IspId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InfoShop.Core.DAL.Entities.Market", "Market")
                        .WithMany("Connections")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Isp");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.ConnectionDetail", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Connection", null)
                        .WithMany("ConnectionDetails")
                        .HasForeignKey("ConnectionId");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.IspContact", b =>
                {
                    b.HasOne("InfoShop.Core.DAL.Entities.Isp", null)
                        .WithMany("IspContacts")
                        .HasForeignKey("IspId");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Connection", b =>
                {
                    b.Navigation("ConnectionDetails");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Isp", b =>
                {
                    b.Navigation("IspContacts");
                });

            modelBuilder.Entity("InfoShop.Core.DAL.Entities.Market", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
